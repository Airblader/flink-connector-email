plugins {
    id "java"
    id "com.diffplug.gradle.spotless" version "4.3.0"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

apply from: "${rootDir}/dependencies.gradle"

allprojects {
    group "com.github.airblader"
    version "1.0-SNAPSHOT"

    repositories {
        mavenCentral()
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

spotless {
    java {
        importOrder()
        removeUnusedImports()

        googleJavaFormat()
    }
}

configurations {
    bundledJars

    testImplementation.extendsFrom compileOnly
}

shadowJar {
    configurations = [project.configurations.bundledJars]
    relocate "okhttp3", "com.github.airblader.shaded.okhttp3"
    relocate "okio", "com.github.airblader.shaded.okio"
    relocate "com.sun.activation", "com.github.airblader.shaded.com.sun.activation"
    relocate "com.sun.mail", "com.github.airblader.shaded.com.sun.mail"
    relocate "jakarta", "com.github.airblader.shaded.jakarta"

    mergeServiceFiles()
}

jar {
    enabled = false
    dependsOn(shadowJar)
}

task copyToDocker(type: Copy) {
    from jar
    into "${rootDir}/testing/images/client/jars"
}

jar.finalizedBy copyToDocker

dependencies {
    compileOnly "org.apache.flink:flink-table-common:${verFlink}"
    compileOnly "org.apache.flink:flink-table-api-java-bridge_2.12:${verFlink}"
    bundledJars "com.squareup.okhttp3:okhttp:${verOkHttp}"
    bundledJars "com.sun.mail:jakarta.mail:${verJakarta}"

    testCompile "junit:junit:${verJUnit}"
    testImplementation "org.assertj:assertj-core:${verAssertJ}"
    testImplementation "org.apache.flink:flink-test-utils_2.12:${verFlink}"
    testImplementation "org.apache.flink:flink-table-planner-blink_2.12:${verFlink}"
    testImplementation "com.tngtech.java:junit-dataprovider:${verDataprovider}"
    testImplementation "com.icegreen:greenmail-junit4:${varGreenMail}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${verLombok}"
    annotationProcessor "org.projectlombok:lombok:${verLombok}"
    testCompileOnly "org.projectlombok:lombok:${verLombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${verLombok}"

    configurations.compileOnly.extendsFrom(configurations.bundledJars)
}
